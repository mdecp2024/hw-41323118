<h1>About</h1>
<p>國立虎尾科技大學機械設計工程系</p>
<p>National Formosa University</p>
<p>Department of Mechanical Design Engineering</p>
<p>cp2024 計算機程式</p>
<p>課程教材:</p>
<p style="padding-left: 30px;"><a href="https://blog.jupyter.org/introducing-learn-python-with-jupyter-11214f152159">Learn Python with Jupyter</a> (<a href="https://www.learnpythonwithjupyter.com/">site</a>, <a href="https://localhost:9445/downloads/learn_python_with_jupyter.pdf">ebook</a>)</p>
<p style="padding-left: 30px;">教育版帳號 microsoftonline 登入點: <a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a></p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入 <a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a> Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span class="fui-Text ___vec8h90 fk6fouc f1pbo8a8 f1i3iumi figsok6 fpgzoln f1w7gpdv f6juhto f1mtd64y f1y7q3j9 f2jf649 foxqkq2" data-tid="join-team-code">ldodwua</span></p>
<p>個人倉儲:<a href="https://github.com/mdecp2024/hw-41323118">https://github.com/mdecp2024/hw-41323118</a></p>
<p>個人網站:<a class="Box-sc-g0xbh4-0 kJTOpK prc-Link-Link-85e08" href="https://mdecp2024.github.io/hw-41323118/">https://mdecp2024.github.io/hw-41323118/</a></p>
<p>其他資訊:</p>
<p style="padding-left: 30px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z">cd2023_pj3ag4_zmq_football_4.7.7z</a></p>
<p style="padding-left: 30px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</a></p>
<h1>Attendance</h1>
<p>出席 (10%) - 自行舉證評分</p>
<p>自行利用 Github commits 提交記錄評分.</p>
<h1>HW 1</h1>
<h4>主題: 基於瀏覽器的分散式版次管理與整合程式開發環境 (10%)<span style="background-color: #ffff99;"><br/></span></h4>
<p style="padding-left: 30px;">USB 隨身碟:</p>
<p style="padding-left: 60px;">下載 <a href="http://229.cycu.org/python_2025_lite.7z">python_2025_lite.7z</a> (428 MB, 解開壓縮後約 1.5 GB)</p>
<p style="padding-left: 30px;"><a href="https://mde.tw/cp2024/content/Jupyter.html">Jupyter</a></p>
<p style="padding-left: 30px;">What are Github and Codespaces?</p>
<p style="padding-left: 60px;"><a href="https://docs.github.com/en/get-started/start-your-journey/hello-world">Hello World - GitHub Docs</a></p>
<p style="padding-left: 30px;">利用包含學號的字串作為帳號, 申請免費使用 Github.</p>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 1</p>
<hr/>
<p>PART 1: Creating the basics 資料整理 (10%)</p>
<p>啟動可攜程式系統後, 在命令列中:</p>
<p>y:\&gt;cd notebook</p>
<p>y:\notebook&gt;jupyter lab --collaborative</p>
<p>進入 <a href="/downloads/01_string_input_print.ipynb">01_string_input_print.ipynb</a> 練習如何修改 PART1 notebook 後存檔, 上傳至作業倉儲中的 downloads 目錄後, 透過 <a href="https://nbviewer.org/">https://nbviewer.org/</a> 將已經提交的 <a href="/downloads/01_string_input_print.ipynb">01_string_input_print.ipynb</a>, 嵌入下列網頁中.</p>
<p><iframe height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb" width="600"></iframe></p>
<p>上列 iframe 標註的 html 語法:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;iframe width="600" height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb"&gt;&lt;/iframe&gt;</pre>
<p>完成上述流程整理後, 請將 HW1 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 1 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 Topic 1 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h3>w7</h3>
<h4><span style="color: #000000;"><strong>Brython建立</strong></span></h4>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/GCPyGwUtXEI?si=zxU28R1Umi1_6Tfw" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/GKCMeJye1MM?si=1Wvv8Ml8KJuAPKmV" title="YouTube video player" width="560"></iframe></p>
<h3>w10</h3>
<p><strong>題目一:</strong>請利用<a href="https://gist.githubusercontent.com/mdecycu/5e6eda7a004c15fa7262b9a80bfa4af6/raw/c2225ac22f32ee8485a630b42cf3f4d8567bb661/up_to_down_pyramid.py">程式一</a>的原始碼, 分別在自己網站的 Brython 頁面、SciTE 編輯器、命令提示字元視窗、Jupyter Lab 以及 Codespaces 環境中執行</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/8LtFAeboY-o?si=tQyaQDeItSITUHNR" title="YouTube video player" width="560"></iframe></p>
<p><b>  </b></p>
<p><strong>題目二:</strong>請問 Python 程式中有關變數的命名, 除了必須以"_", 以及英文大小寫字母開頭之外, 還有甚麼需要特別注意的地方? 與所謂的"關鍵字"(<a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5705fc2a67aa1db0c0d44d6d0478b08b/raw/9d7d4227cc13cdad06544e3960c90a1adfb5c388/python_keywords.py">Keywords</a>)有關係嗎? 請實際舉例, 針對 Python 程式命名的規則編寫程式, 並採上一題的五種程式執行方法, 展示正確變數命名與違反變數命名時, 所顯示的錯誤訊息回應</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/a4AjyH9ZUDg?si=36-FFj4DULeuxtfO" title="YouTube video player" width="560"></iframe></p>
<p> </p>
<p><strong>題目三:<span> </span></strong><a href="http://mde.tw/cp2024/content/Problem_set.html">http://mde.tw/cp2024/content/Problem_set.html</a> 中有利用 Python 程式解決物理與微積分的範例流程, 請根據過程中所得到的 Python 程式, 利用題目一中的五種方法執行</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/0EcmJZEZozI?si=KKWz7J7I8G4RX6_z" title="YouTube video player" width="560"></iframe></p>
<h3>w11_hw</h3>
<p></p>
<p><strong>題目一:</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/hiS--hr28ZM?si=yHYvaeacsvB8XxzS" title="YouTube video player" width="560"></iframe></p>
<p><span>這次藉由chat gpt的幫助完成了任務,中間忘記了題目上的提示而NG了一次</span></p>
<p><span></span></p>
<p><span></span><strong>題目二:</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/aL6NJNcFajo?si=Yrx6nz4rHjIx3Cyr" title="YouTube video player" width="560"></iframe></p>
<p><span>基本上操作與W11-1相同 但感覺畫圓的程式碼公式可記下來之後有機會使用到</span></p>
<p><span></span></p>
<p><span><span style="color: #33cccc;"><strong>程式碼:</strong></span> <a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/c2abf32b7a68330c6889eb163bcba017/raw/2aa69e3ec1658c036f99366ddeba75c28a399d06/W11-1">W11-1</a> <a href="https://gist.githubusercontent.com/41323118/d8bfbf9bff1f339f22b5f3f7a68c20e7/raw/7d8222d1e466e7801af68fd33ce0afc2d6b971f1/W11-2">W11-2</a></span></p>
<p><span><span style="color: #000000;"><strong>總體心得:</strong></span>由於是先做了之後的內容再回來做的,這兩題的題目體感上較簡單,但話雖這麼說,少了AI的幫助或許會花很久的時間...</span></p>
<h3>w12_hw</h3>
<p><strong>第一題-Strings, input() and print()字串, 輸入及打印</strong></p>
<p><span style="color: #808000;"><b>Strings:<span> </span></b><span style="color: #000000;">任何在引號之中的都為<span style="color: #99cc00;"><strong>string(字串)</strong></span></span></span></p>
<p>ex: <a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/0e191a373b9c909ab43080c0385d2f50/raw/c8f5768d539e6d10b4aca735d360774e6a030083/w12-1.py">這是個字串</a></p>
<p><span style="color: #333300;"><em>備註:只有字串的程式碼將不會輸出任何東西</em></span></p>
<p><span style="color: #808000;"><strong>Input:<span> </span></strong><span style="color: #000000;">在使用Brython之中的<span style="color: #99cc00;"><strong>input(輸入)</strong></span>時會跳出詢問窗</span></span></p>
<p>ex: <a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/3e1313dbffa9e2c57f5c62ce435c4c27/raw/5ecc9838c9742bb9aab9c11f3159cddd204ac6c2/w12-1-1.py">你的名字&amp;你來自哪裡</a></p>
<p><strong><span style="color: #808000;">Print:<span> </span></span></strong><span style="color: #808000;"><span style="color: #000000;">這個指令如其名<span style="color: #99cc00;"><strong>print(打印)</strong></span>,作用為印出<span style="color: #99cc00;"><strong>string(字串)</strong><span style="color: #000000;">,可印出文字或排列成圖形</span></span></span></span></p>
<p><span style="color: #000000;">ex:<span> </span><a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/8cf9a5046e78fc999432a4ed6b10fe64/raw/70799e7a90a0d7406492d2be6c923187d758eb52/w12-2.py">打印小貓</a></span></p>
<p><span style="color: #333300;"><em>備註:由於Brython中此指令印出會有所偏移,因故將程式碼調整</em></span></p>
<p><span style="color: #333300;"><em> </em></span></p>
<p><span style="color: #000000;"><strong><span color="#333300">第二題-Variables變數</span></strong></span></p>
<p><span style="color: #99cc00;"><strong><span color="#333300" style="color: #333300;"><span style="color: #808000;">First name&amp;Last name:</span> </span></strong><span style="color: #000000;"><span color="#333300" style="color: #333300;">將變數設定為名稱與姓氏,再將其<span style="color: #99cc00;"><strong>print(打印)</strong></span></span></span></span></p>
<p><span style="color: #000000;"><span color="#99cc00" style="color: #99cc00;"><span style="color: #000000;">ex: <a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/51cefc17b61583ac410c12715763acc5/raw/c31ac384368495d1293c88943a9f2ff6c509c75f/variables1.py">名稱與姓氏</a></span></span></span></p>
<p><strong><span style="color: #808000;">What is your favorite food: </span></strong><span style="color: #808000;"><span style="color: #000000;">結合<span style="color: #99cc00;"><strong>print(打印)</strong></span>和<span style="color: #99cc00;"><strong>input(輸入)</strong><span style="color: #000000;">,將輸入之值作為<span style="color: #99cc00;"><strong>string(字串)</strong><span style="color: #000000;">列出</span></span></span></span></span></span></p>
<p><span color="#808000" style="color: #808000;"><span style="color: #000000;">ex: <a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/edd054d0f60e4d46ca8347991e0e6b62/raw/b5796935d36374df2ed121a3f16b08218f9b88cf/variables2.py">你最愛的食物是什麼?</a></span></span></p>
<p> </p>
<p><span style="color: #000000;"><strong><span color="#808000">第三題-If... in... else...假如...否則...</span></strong></span></p>
<p><strong><span style="color: #808000;">In a bookstore: </span></strong><span style="color: #808000;"><span style="color: #000000;">利用<span style="color: #ff00ff;"><strong>if判斷式</strong></span>,判斷所選書籍是否有在販售</span></span></p>
<p>ex: <a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/a59b3ce89ccae77aacfaefd1f6d6bdec/raw/065b4f0b096ea245a433bca9e55890665ec43c34/if%2520else%25201.py">在書店裡</a></p>
<p> </p>
<p><strong>第四題</strong>-<strong>Append(), remove()附加和消除</strong></p>
<p><span style="color: #808000;"><b style="color: #808000;">Grocery shopping: </b><span style="color: #000000;">使用<span style="color: #33cccc;"><strong>a</strong><strong>ppend(附加)</strong></span>在清單中加入第一次<span color="#99cc00" style="color: #99cc00;"><span style="color: #000000;">輸入</span></span><span style="color: #99cc00;"><span style="color: #000000;">之答案,並使用<span style="color: #ff0000;"><strong>remove(消除)</strong><span style="color: #000000;">在清單中移除第二次<span color="#99cc00">輸入</span>之答案</span></span></span></span></span></span></p>
<p><span style="color: #000000;">ex: <a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/9cff0506c6d52af93427e1796f78400d/raw/e48bc8505a2bbbfd12f77e1d46fb8e4221db0717/APPENDREMOVE.py">購物清單</a></span></p>
<p><span style="color: #333300;"><em> 備註:結合if判斷式偵測第二次之答案是否在清單內,若無則不變</em></span></p>
<p><span color="#333300" style="color: #333300;"><i> </i></span></p>
<p><strong><span style="color: #000000;"><span color="#333300" style="color: #333300;">第五題-Index(), pop() and insert()列表查找, 移出與插入</span></span></strong></p>
<p><span style="color: #808000;"><strong><span color="#333300">Customizing the burger menu: </span></strong><span style="color: #000000;"><span style="color: #99cc00;"><strong><span color="#333300">index</span></strong></span><span color="#333300"><span style="color: #99cc00;"><strong>(索引)</strong></span>可以用來搜尋列表中指定字元的位置,與<strong><span style="color: #99cc00;">pop</span></strong>結合,可<span>删除特定列表項目,而與<span style="color: #99cc00;"><strong>insert(插入)</strong><span style="color: #000000;">結合,可</span></span>在指定的索引處向列表中插入一个項目 </span></span></span></span></p>
<p><span style="color: #808000;"><span style="color: #000000;"><span color="#333300"><span>利用這些指令,達到在菜單上新增與移除品項</span></span></span></span></p>
<p><span style="color: #808000;"><span style="color: #000000;"><span color="#333300"><span>ex: <a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/ea7018ec843d8f1138884eed47694d55/raw/9bf26287e6061e1559ad9b977ad3154d3b8ea6d9/in.py">漢堡店菜單</a></span></span></span></span></p>
<p><span style="color: #808000;"><span style="color: #000000;"><span color="#333300"><span> </span></span></span></span></p>
<p><strong><span color="#333300">第六題-Slicing切片</span></strong></p>
<p><span style="color: #808000;"><strong>Traveling around the world:</strong><span style="color: #000000;">設定好變數及字串,使用<strong><span style="color: #ff00ff;">方括號[ ]</span></strong><span style="color: #000000;">將字串切片,輸出各式不同的值</span></span></span></p>
<p><span color="#333300">ex: <a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/b983749c9da3336875b9a09f47804478/raw/f0cd65f9c512c524a0717d9a4841fd88d9e6e7f0/slicing.py">環遊世界</a></span></p>
<p><span color="#333300"> </span></p>
<p><span style="color: #000000;"><strong><span color="#333300">第七題-Slicing use切片應用</span></strong></span></p>
<p><span style="color: #808000;"><strong><span color="#333300">Senses, planets, and a house:</span></strong><span color="#333300"> <span style="color: #000000;">延伸第六題的切片,應用更多情況</span></span></span></p>
<p><span style="color: #808000;"><span color="#333300"><span style="color: #000000;">ex:<a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/a1dd7fc90d8dc7331cd929263227460f/raw/e32ebd85da835efbfe595e67e00facd27fa7c171/sph.py"> 感官星球與房屋</a></span></span></span></p>
<p> </p>
<p><strong>第八題-For() range迴圈1</strong></p>
<p><span style="color: #808000;"><strong>My friend's favorite dishes: </strong><span style="color: #000000;"><span style="color: #000080;"><strong>for迴圈</strong></span>使我們可以重複執行一組指令<span>,</span>直到達到特定的條件為止,而<strong><span style="color: #000080;">range</span></strong>則是用來生成一個包含一系列數字的有序序列</span></span></p>
<p><span style="color: #808000;"><span style="color: #000000;">利用以上兩個新的指令,<span>在每次循環中依次列出朋友與菜餚</span></span></span></p>
<p><span style="color: #808000;"><span style="color: #000000;">ex: <a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/5065e0ea4d6fd5b1a8c8b5feaf651dae/raw/9e69c2f11610dbc633623cf687187c01dfffbf48/for1.py">我朋友們最喜歡的菜餚</a></span></span></p>
<p> </p>
<p><strong>第九題-For() loop if...迴圈2</strong></p>
<p><span style="color: #808000;"><strong>At the zoo: </strong><span style="color: #000000;">延伸<strong><span style="color: #000080;">for迴圈</span></strong>的應用,加上<span style="color: #ff00ff;"><strong>if判斷式</strong><span style="color: #000080;">用以</span></span>條件判斷</span></span></p>
<p><span style="color: #808000;"><span style="color: #000000;">ex: <a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/9c998ee8fb974b32665a92731f676537/raw/bf4827803e340bcbd434ab5f31c964f2de9fa69f/for2.py">動物園之中</a></span></span></p>
<p> </p>
<p><strong>第十題-For() search迴圈搜索</strong></p>
<p><strong><span style="color: #808000;">Where are my gloves?: </span></strong><span style="color: #808000;"><span style="color: #000000;">搜索</span></span><span style="color: #000000;">表中的每個項目，並對每個項目執行特定的動作</span></p>
<p><span style="color: #000000;">ex: <a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/6f4a5c9bb6a8bef04498970b7bc7c4b0/raw/13100810dca90d03cf40433370918134951aefd7/for3.py">裝備清點</a></span></p>
<p><span style="color: #000000;"></span></p>
<h3>w13_hw</h3>
<p></p>
<p><span style="color: #000000;"><strong>題目:</strong>請在下列圖形中的兩個正方形外圍, 以黑色畫筆畫圓, 並設法在各線條所圍成的封閉區域塗上不同顏色. 操作過程請拍攝影片, 並在頁面中列出作業心得.<img alt="" height="400" src="/images/下載.png" width="400"/></span></p>
<p><strong>影片:</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/s8O71KVWgj0?si=BO_4cCGpnGGEefv_" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/552c92fd6548e8165d383e77c62e13a0/raw/d553b2ad10fbdf417892975098f18a77e3779d07/w13.py">程式碼</a></p>
<p></p>
<p><strong>心得:</strong>在多次嘗試後,竟然一次除錯都沒有的完美下達指令,讓我理解雖然Ai時常接收指令出錯,導致需要多次試錯才能得到理想的答案,但只要改變下達指令的用詞,或許就可以省很多時間,避免Ai誤解指令的尷尬狀況</p>
<p></p>
<h3>w14_ex</h3>
<p><span style="color: #000000;"><strong>題目:</strong></span>以下為參考範例的詳細說明, 請根據此一程式架構, 修改為三個圓的區域塗色任務.</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_371413">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
<div class="line number71 index70 alt2">71</div>
<div class="line number72 index71 alt1">72</div>
<div class="line number73 index72 alt2">73</div>
<div class="line number74 index73 alt1">74</div>
<div class="line number75 index74 alt2">75</div>
<div class="line number76 index75 alt1">76</div>
<div class="line number77 index76 alt2">77</div>
<div class="line number78 index77 alt1">78</div>
<div class="line number79 index78 alt2">79</div>
<div class="line number80 index79 alt1">80</div>
<div class="line number81 index80 alt2">81</div>
<div class="line number82 index81 alt1">82</div>
<div class="line number83 index82 alt2">83</div>
<div class="line number84 index83 alt1">84</div>
<div class="line number85 index84 alt2">85</div>
<div class="line number86 index85 alt1">86</div>
<div class="line number87 index86 alt2">87</div>
<div class="line number88 index87 alt1">88</div>
<div class="line number89 index88 alt2">89</div>
<div class="line number90 index89 alt1">90</div>
<div class="line number91 index90 alt2">91</div>
<div class="line number92 index91 alt1">92</div>
<div class="line number93 index92 alt2">93</div>
<div class="line number94 index93 alt1">94</div>
<div class="line number95 index94 alt2">95</div>
<div class="line number96 index95 alt1">96</div>
<div class="line number97 index96 alt2">97</div>
<div class="line number98 index97 alt1">98</div>
<div class="line number99 index98 alt2">99</div>
<div class="line number100 index99 alt1">100</div>
<div class="line number101 index100 alt2">101</div>
<div class="line number102 index101 alt1">102</div>
<div class="line number103 index102 alt2">103</div>
<div class="line number104 index103 alt1">104</div>
<div class="line number105 index104 alt2">105</div>
<div class="line number106 index105 alt1">106</div>
<div class="line number107 index106 alt2">107</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py keyword">from</code> <code class="py plain">browser </code><code class="py keyword">import</code> <code class="py plain">html</code></div>
<div class="line number2 index1 alt1"><code class="py keyword">from</code> <code class="py plain">browser </code><code class="py keyword">import</code> <code class="py plain">document as doc</code></div>
<div class="line number3 index2 alt2"><code class="py keyword">import</code> <code class="py plain">random</code></div>
<div class="line number4 index3 alt1"><code class="py keyword">import</code> <code class="py plain">math</code></div>
<div class="line number5 index4 alt2"> </div>
<div class="line number6 index5 alt1"><code class="py comments"># 定義一個函式來初始化畫布</code></div>
<div class="line number7 index6 alt2"><code class="py keyword">def</code> <code class="py plain">initialize_canvas(canvas_width</code><code class="py keyword">=</code><code class="py value">400</code><code class="py plain">, canvas_height</code><code class="py keyword">=</code><code class="py value">400</code><code class="py plain">, </code><code class="py functions">id</code><code class="py keyword">=</code><code class="py string">"brython_div1"</code><code class="py plain">):</code></div>
<div class="line number8 index7 alt1"><code class="py spaces">    </code><code class="py comments">"""</code></div>
<div class="line number9 index8 alt2"><code class="py spaces">    </code><code class="py comments">初始化畫布，創建一個指定大小的 Canvas 元素，並將其加到 HTML 文件中。</code></div>
<div class="line number10 index9 alt1"><code class="py spaces">    </code><code class="py comments">返回畫布元素和它的 2D 繪圖上下文。</code></div>
<div class="line number11 index10 alt2"><code class="py spaces">    </code><code class="py comments">"""</code></div>
<div class="line number12 index11 alt1"><code class="py spaces">    </code><code class="py comments"># 創建一個 canvas 元素，並設置其寬度與高度</code></div>
<div class="line number13 index12 alt2"><code class="py spaces">    </code><code class="py plain">canvas </code><code class="py keyword">=</code> <code class="py plain">html.CANVAS(width</code><code class="py keyword">=</code><code class="py plain">canvas_width, height</code><code class="py keyword">=</code><code class="py plain">canvas_height)</code></div>
<div class="line number14 index13 alt1"><code class="py spaces">    </code><code class="py comments"># 將創建的 canvas 元素添加到指定的 HTML div 元素中</code></div>
<div class="line number15 index14 alt2"><code class="py spaces">    </code><code class="py plain">brython_div </code><code class="py keyword">=</code> <code class="py plain">doc[</code><code class="py functions">id</code><code class="py plain">]  </code><code class="py comments"># 獲取指定 id 的 div 元素</code></div>
<div class="line number16 index15 alt1"><code class="py spaces">    </code><code class="py plain">brython_div &lt;</code><code class="py keyword">=</code> <code class="py plain">canvas  </code><code class="py comments"># 將 canvas 插入到該 div 中</code></div>
<div class="line number17 index16 alt2"><code class="py spaces">    </code> </div>
<div class="line number18 index17 alt1"><code class="py spaces">    </code><code class="py comments"># 獲取 canvas 的 2D 繪圖上下文，這是進行繪圖的主要接口</code></div>
<div class="line number19 index18 alt2"><code class="py spaces">    </code><code class="py plain">ctx </code><code class="py keyword">=</code> <code class="py plain">canvas.getContext(</code><code class="py string">"2d"</code><code class="py plain">)</code></div>
<div class="line number20 index19 alt1"><code class="py spaces">    </code> </div>
<div class="line number21 index20 alt2"><code class="py spaces">    </code><code class="py comments"># 返回畫布和它的 2D 繪圖上下文</code></div>
<div class="line number22 index21 alt1"><code class="py spaces">    </code><code class="py keyword">return</code> <code class="py plain">canvas, ctx</code></div>
<div class="line number23 index22 alt2"> </div>
<div class="line number24 index23 alt1"><code class="py comments"># 定義一個隨機顏色生成函式</code></div>
<div class="line number25 index24 alt2"><code class="py keyword">def</code> <code class="py plain">random_color_generator():</code></div>
<div class="line number26 index25 alt1"><code class="py spaces">    </code><code class="py comments">"""</code></div>
<div class="line number27 index26 alt2"><code class="py spaces">    </code><code class="py comments">生成一個隨機的 RGB 顏色字符串。</code></div>
<div class="line number28 index27 alt1"><code class="py spaces">    </code><code class="py comments">返回的顏色是 "rgb(r, g, b)" 格式，其中 r, g, b 是 0 到 255 之間的隨機整數。</code></div>
<div class="line number29 index28 alt2"><code class="py spaces">    </code><code class="py comments">"""</code></div>
<div class="line number30 index29 alt1"><code class="py spaces">    </code><code class="py plain">r </code><code class="py keyword">=</code> <code class="py plain">random.randint(</code><code class="py value">0</code><code class="py plain">, </code><code class="py value">255</code><code class="py plain">)  </code><code class="py comments"># 隨機生成紅色成分 (0-255)</code></div>
<div class="line number31 index30 alt2"><code class="py spaces">    </code><code class="py plain">g </code><code class="py keyword">=</code> <code class="py plain">random.randint(</code><code class="py value">0</code><code class="py plain">, </code><code class="py value">255</code><code class="py plain">)  </code><code class="py comments"># 隨機生成綠色成分 (0-255)</code></div>
<div class="line number32 index31 alt1"><code class="py spaces">    </code><code class="py plain">b </code><code class="py keyword">=</code> <code class="py plain">random.randint(</code><code class="py value">0</code><code class="py plain">, </code><code class="py value">255</code><code class="py plain">)  </code><code class="py comments"># 隨機生成藍色成分 (0-255)</code></div>
<div class="line number33 index32 alt2"><code class="py spaces">    </code><code class="py keyword">return</code> <code class="py plain">f</code><code class="py string">"rgb({r}, {g}, {b})"</code>  <code class="py comments"># 返回隨機顏色字符串</code></div>
<div class="line number34 index33 alt1"> </div>
<div class="line number35 index34 alt2"><code class="py comments"># 判斷點 (px, py) 是否在圓內</code></div>
<div class="line number36 index35 alt1"><code class="py keyword">def</code> <code class="py plain">is_point_in_circle(px, py, cx, cy, r):</code></div>
<div class="line number37 index36 alt2"><code class="py spaces">    </code><code class="py comments">"""</code></div>
<div class="line number38 index37 alt1"><code class="py spaces">    </code><code class="py comments">判斷一個點 (px, py) 是否位於圓 (cx, cy, r) 內。</code></div>
<div class="line number39 index38 alt2"><code class="py spaces">    </code><code class="py comments">(cx, cy) 為圓心坐標，r 為圓的半徑。</code></div>
<div class="line number40 index39 alt1"><code class="py spaces">    </code><code class="py comments">"""</code></div>
<div class="line number41 index40 alt2"><code class="py spaces">    </code><code class="py comments"># 使用圓的方程 (px - cx)² + (py - cy)² &lt;= r² 判斷點是否在圓內</code></div>
<div class="line number42 index41 alt1"><code class="py spaces">    </code><code class="py keyword">return</code> <code class="py plain">(px </code><code class="py keyword">-</code> <code class="py plain">cx) </code><code class="py keyword">*</code><code class="py keyword">*</code> <code class="py value">2</code> <code class="py keyword">+</code> <code class="py plain">(py </code><code class="py keyword">-</code> <code class="py plain">cy) </code><code class="py keyword">*</code><code class="py keyword">*</code> <code class="py value">2</code> <code class="py plain">&lt;</code><code class="py keyword">=</code> <code class="py plain">r </code><code class="py keyword">*</code><code class="py keyword">*</code> <code class="py value">2</code></div>
<div class="line number43 index42 alt2"> </div>
<div class="line number44 index43 alt1"><code class="py comments"># 使用者設定的圓心座標和半徑，並進行掃描線填充</code></div>
<div class="line number45 index44 alt2"><code class="py keyword">def</code> <code class="py plain">draw_circles(x1, y1, r1, x2, y2, r2):</code></div>
<div class="line number46 index45 alt1"><code class="py spaces">    </code><code class="py comments">"""</code></div>
<div class="line number47 index46 alt2"><code class="py spaces">    </code><code class="py comments">根據傳入的兩個圓的圓心和半徑，繪製圓形並使用掃描線算法填充區域。</code></div>
<div class="line number48 index47 alt1"><code class="py spaces">    </code><code class="py comments">x1, y1, r1 是圓1的圓心坐標和半徑</code></div>
<div class="line number49 index48 alt2"><code class="py spaces">    </code><code class="py comments">x2, y2, r2 是圓2的圓心坐標和半徑</code></div>
<div class="line number50 index49 alt1"><code class="py spaces">    </code><code class="py comments">"""</code></div>
<div class="line number51 index50 alt2"><code class="py spaces">    </code><code class="py comments"># 初始化畫布，創建並取得畫布和其 2D 上下文</code></div>
<div class="line number52 index51 alt1"><code class="py spaces">    </code><code class="py plain">canvas, ctx </code><code class="py keyword">=</code> <code class="py plain">initialize_canvas(</code><code class="py value">400</code><code class="py plain">, </code><code class="py value">400</code><code class="py plain">)</code></div>
<div class="line number53 index52 alt2"><code class="py spaces">    </code> </div>
<div class="line number54 index53 alt1"><code class="py spaces">    </code><code class="py comments"># 清空畫布，以便重新繪製</code></div>
<div class="line number55 index54 alt2"><code class="py spaces">    </code><code class="py plain">ctx.clearRect(</code><code class="py value">0</code><code class="py plain">, </code><code class="py value">0</code><code class="py plain">, canvas.width, canvas.height)</code></div>
<div class="line number56 index55 alt1"><code class="py spaces">    </code> </div>
<div class="line number57 index56 alt2"><code class="py spaces">    </code><code class="py comments"># 顏色區域存儲字典，存儲不同區域的顏色</code></div>
<div class="line number58 index57 alt1"><code class="py spaces">    </code><code class="py plain">color_dict </code><code class="py keyword">=</code> <code class="py plain">{}</code></div>
<div class="line number59 index58 alt2"> </div>
<div class="line number60 index59 alt1"><code class="py spaces">    </code><code class="py comments"># 使用掃描線方法填充區域，逐行掃描畫布上的每個像素</code></div>
<div class="line number61 index60 alt2"><code class="py spaces">    </code><code class="py keyword">for</code> <code class="py plain">py </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(</code><code class="py value">0</code><code class="py plain">, canvas.height):  </code><code class="py comments"># 遍歷每一行的 y 坐標</code></div>
<div class="line number62 index61 alt1"><code class="py spaces">        </code><code class="py comments"># 當前掃描線的顏色初始化為 None，後面會根據位置選擇顏色</code></div>
<div class="line number63 index62 alt2"><code class="py spaces">        </code><code class="py plain">current_color </code><code class="py keyword">=</code> <code class="py color1">None</code> </div>
<div class="line number64 index63 alt1"><code class="py spaces">        </code> </div>
<div class="line number65 index64 alt2"><code class="py spaces">        </code><code class="py comments"># 遍歷當前行中的每個像素點 (px, py)</code></div>
<div class="line number66 index65 alt1"><code class="py spaces">        </code><code class="py keyword">for</code> <code class="py plain">px </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(</code><code class="py value">0</code><code class="py plain">, canvas.width):  </code><code class="py comments"># 遍歷每一列的 x 坐標</code></div>
<div class="line number67 index66 alt2"><code class="py spaces">            </code><code class="py comments"># 判斷該點是否在圓1內</code></div>
<div class="line number68 index67 alt1"><code class="py spaces">            </code><code class="py plain">in_circle1 </code><code class="py keyword">=</code> <code class="py plain">is_point_in_circle(px, py, x1, y1, r1)</code></div>
<div class="line number69 index68 alt2"><code class="py spaces">            </code><code class="py comments"># 判斷該點是否在圓2內</code></div>
<div class="line number70 index69 alt1"><code class="py spaces">            </code><code class="py plain">in_circle2 </code><code class="py keyword">=</code> <code class="py plain">is_point_in_circle(px, py, x2, y2, r2)</code></div>
<div class="line number71 index70 alt2"><code class="py spaces">            </code> </div>
<div class="line number72 index71 alt1"><code class="py spaces">            </code><code class="py keyword">if</code> <code class="py plain">in_circle1 </code><code class="py keyword">and</code> <code class="py plain">in_circle2:</code></div>
<div class="line number73 index72 alt2"><code class="py spaces">                </code><code class="py comments"># 如果點同時在兩個圓內，則是交集區域</code></div>
<div class="line number74 index73 alt1"><code class="py spaces">                </code><code class="py keyword">if</code> <code class="py string">"intersection"</code> <code class="py keyword">not</code> <code class="py keyword">in</code> <code class="py plain">color_dict:</code></div>
<div class="line number75 index74 alt2"><code class="py spaces">                    </code><code class="py comments"># 如果還沒有為交集區域分配顏色，則分配一個隨機顏色</code></div>
<div class="line number76 index75 alt1"><code class="py spaces">                    </code><code class="py plain">color_dict[</code><code class="py string">"intersection"</code><code class="py plain">] </code><code class="py keyword">=</code> <code class="py plain">random_color_generator()</code></div>
<div class="line number77 index76 alt2"><code class="py spaces">                </code><code class="py comments"># 設置當前掃描線的顏色為交集區域的顏色</code></div>
<div class="line number78 index77 alt1"><code class="py spaces">                </code><code class="py plain">current_color </code><code class="py keyword">=</code> <code class="py plain">color_dict[</code><code class="py string">"intersection"</code><code class="py plain">]</code></div>
<div class="line number79 index78 alt2"><code class="py spaces">            </code><code class="py keyword">elif</code> <code class="py plain">in_circle1:</code></div>
<div class="line number80 index79 alt1"><code class="py spaces">                </code><code class="py comments"># 如果點只在圓1內，則是圓1的區域</code></div>
<div class="line number81 index80 alt2"><code class="py spaces">                </code><code class="py keyword">if</code> <code class="py string">"circle1"</code> <code class="py keyword">not</code> <code class="py keyword">in</code> <code class="py plain">color_dict:</code></div>
<div class="line number82 index81 alt1"><code class="py spaces">                    </code><code class="py comments"># 如果還沒有為圓1分配顏色，則分配一個隨機顏色</code></div>
<div class="line number83 index82 alt2"><code class="py spaces">                    </code><code class="py plain">color_dict[</code><code class="py string">"circle1"</code><code class="py plain">] </code><code class="py keyword">=</code> <code class="py plain">random_color_generator()</code></div>
<div class="line number84 index83 alt1"><code class="py spaces">                </code><code class="py comments"># 設置當前掃描線的顏色為圓1區域的顏色</code></div>
<div class="line number85 index84 alt2"><code class="py spaces">                </code><code class="py plain">current_color </code><code class="py keyword">=</code> <code class="py plain">color_dict[</code><code class="py string">"circle1"</code><code class="py plain">]</code></div>
<div class="line number86 index85 alt1"><code class="py spaces">            </code><code class="py keyword">elif</code> <code class="py plain">in_circle2:</code></div>
<div class="line number87 index86 alt2"><code class="py spaces">                </code><code class="py comments"># 如果點只在圓2內，則是圓2的區域</code></div>
<div class="line number88 index87 alt1"><code class="py spaces">                </code><code class="py keyword">if</code> <code class="py string">"circle2"</code> <code class="py keyword">not</code> <code class="py keyword">in</code> <code class="py plain">color_dict:</code></div>
<div class="line number89 index88 alt2"><code class="py spaces">                    </code><code class="py comments"># 如果還沒有為圓2分配顏色，則分配一個隨機顏色</code></div>
<div class="line number90 index89 alt1"><code class="py spaces">                    </code><code class="py plain">color_dict[</code><code class="py string">"circle2"</code><code class="py plain">] </code><code class="py keyword">=</code> <code class="py plain">random_color_generator()</code></div>
<div class="line number91 index90 alt2"><code class="py spaces">                </code><code class="py comments"># 設置當前掃描線的顏色為圓2區域的顏色</code></div>
<div class="line number92 index91 alt1"><code class="py spaces">                </code><code class="py plain">current_color </code><code class="py keyword">=</code> <code class="py plain">color_dict[</code><code class="py string">"circle2"</code><code class="py plain">]</code></div>
<div class="line number93 index92 alt2"><code class="py spaces">            </code><code class="py keyword">else</code><code class="py plain">:</code></div>
<div class="line number94 index93 alt1"><code class="py spaces">                </code><code class="py comments"># 如果點不在任何圓內，則是背景區域</code></div>
<div class="line number95 index94 alt2"><code class="py spaces">                </code><code class="py plain">current_color </code><code class="py keyword">=</code> <code class="py string">"white"</code>  <code class="py comments"># 背景色設為白色</code></div>
<div class="line number96 index95 alt1"> </div>
<div class="line number97 index96 alt2"><code class="py spaces">            </code><code class="py comments"># 設置當前像素的顏色並進行填充</code></div>
<div class="line number98 index97 alt1"><code class="py spaces">            </code><code class="py plain">ctx.fillStyle </code><code class="py keyword">=</code> <code class="py plain">current_color</code></div>
<div class="line number99 index98 alt2"><code class="py spaces">            </code><code class="py comments"># 填充當前像素 (px, py)，並且寬度和高度均為 1 像素</code></div>
<div class="line number100 index99 alt1"><code class="py spaces">            </code><code class="py plain">ctx.fillRect(px, py, </code><code class="py value">1</code><code class="py plain">, </code><code class="py value">1</code><code class="py plain">)  </code><code class="py comments"># 填充一個像素</code></div>
<div class="line number101 index100 alt2"> </div>
<div class="line number102 index101 alt1"><code class="py comments"># 直接設定圓心和半徑</code></div>
<div class="line number103 index102 alt2"><code class="py plain">x1, y1, r1 </code><code class="py keyword">=</code> <code class="py value">150</code><code class="py plain">, </code><code class="py value">200</code><code class="py plain">, </code><code class="py value">100</code>  <code class="py comments"># 圓1：圓心 (150, 200)，半徑 100</code></div>
<div class="line number104 index103 alt1"><code class="py plain">x2, y2, r2 </code><code class="py keyword">=</code> <code class="py value">250</code><code class="py plain">, </code><code class="py value">200</code><code class="py plain">, </code><code class="py value">100</code>  <code class="py comments"># 圓2：圓心 (250, 200)，半徑 100</code></div>
<div class="line number105 index104 alt2"> </div>
<div class="line number106 index105 alt1"><code class="py comments"># 呼叫畫圓函式，並繪製兩個圓</code></div>
<div class="line number107 index106 alt2"><code class="py plain">draw_circles(x1, y1, r1, x2, y2, r2)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
<p> </p>
<p><span style="color: #008080;"><strong>以下是三個圓的區域塗色:</strong></span></p>
<p><a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/860b62360ce1f6ae9e27c3fc812a67f3/raw/f883bd6139b0937609dcc0ad13a6dbd3a16e3ade/w14_ex.py">三個圓的區域塗色程式</a></p>
<p>輸出的結果將是隨機上色,所以每一次的結果都有所不同(如下)</p>
<p></p>
<p><img alt="" height="281" src="/images/螢幕擷取畫面 2025-01-09 053608.jpg" width="304"/></p>
<p></p>
<h3>w15_hw</h3>
<p><span><strong>題目一:</strong> 請利用 Gist 與 Brython 程式環境, 在個人的課程網站中新增一個頁面, 標題為 w15, 以"從 1 累加到 100"作為 anchor 的連結標題, 使用者點擊該連結之後, 可從各自的 Brython 頁面執行程式.</span></p>
<p><a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/da17c1eeedb60e75a4054f7ec48245b3/raw/fa9f55e6ac89e5851a18d4fa885019d4bd3f3277/1to100.py">從 1 累加到 100</a></p>
<p> </p>
<p><span><strong>題目二:</strong> 延伸上題, 設計一個函式 addto(1, 100), 可以完成上述的累加結果. (以"addto"作為連結標題)</span></p>
<p><a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/792073bba6919b7eb07d85ed69ff5d35/raw/5223fd055771ff55c593a0fc3fc961fbd927e32c/addto.py">addto</a></p>
<p> </p>
<p><span><strong>題目三:</strong> 延伸上題, 設計一個函式 add_only_even(1, 100), 可以完成從第一個輸入整數, 累加到第二個輸入變數的累加結果, 但只納入偶數. 頁面中請以 add_only_even 作為連結標題.</span></p>
<p><a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/f7878650bfadad87d1b57e8d20fbd8a8/raw/5e7a6a4fdd9b48b85fd3d82847164806a32adb6a/add_only_even.py">add_only_even</a> </p>
<p> </p>
<p><span><strong>題目四:</strong> 延伸上題, 設計一個函式 add_avoid_8(1, 100), 可以完成從第一個輸入整數, 累加到第二個輸入變數的累加過程, 必須避開數字出現"8"的整數, 頁面中請以 add_avoid_8 作為連結標題.</span></p>
<p><a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/fffb2f8b17c9eda20ce08133ce66a62e/raw/3dff0daafc80ff0bb435e05e9b000eaa9578d9ca/add_avoid_8.py">add_avoid_8</a></p>
<p> </p>
<p><span>完成上述題目, 請將各題目的設計思考、執行過程以及每一行所引用的 Python 程式用法, 整理在 w15 網頁中. 最後列出各題目執行後的心得.</span></p>
<p><strong>心得:</strong>只要w12有好好做,利用老師附給的參考程式其實這四題很容易,這次在第三題<span>add_only_even和第四題add_avoid_8上學到最多,學會了如何更靈活的過濾特定目標並應用,對於數學十分有困難的我卻覺得這次的任務非常有趣</span></p><h1>HW 2</h1>
<h4>主題: Python 的數列、判斷式與重複迴圈 (20%)<span style="background-color: #ffff99;"><br/></span></h4>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 2 and Part 3</p>
<hr/>
<p>延續 HW 1 網頁資料整理與程式練習方法, 整理下列內容 (20%):</p>
<p>PART 2: Introduction to lists and if/else statements</p>
<p>PART 3: Introduction to the for loop</p>
<p>完成上述流程整理後, 請將 HW2 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 2 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 2 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h3>w16_exam1</h3>
<p></p>
<p><a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/ea26b73ac803cca560e859d5e773a818/raw/9bd1c96dc78751b6d21e3d45a3210f2f7a44bca6/w16_exam1.py">程式碼</a><br/>
<script src="https://cdn.jsdelivr.net/npm/brython@3.10.5/brython.min.js" type="text/javascript"></script>
</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/PY1VH65CtfQ?si=bcS3ul_DsC83HNVa" title="YouTube video player" width="560"></iframe></p>
<h1>HW 3</h1>
<h4>主題: Python 的數字、演算法與迴圈 (20%)</h4>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 4 and Part 5</p>
<p>完成上述流程整理後, 請將 HW3 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 3 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 3 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h3>w16_exam2</h3>
<p></p>
<p><a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/ea601e22ef6176f16531b98928fadcae/raw/fc845dec28b20a599a11a97ee5752c8b30fb5df9/w16_exam2.py">程式碼</a></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p><span></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/LrG2IqRczcs?si=__bgSHWLCZ3E8Cyr" title="YouTube video player" width="560"></iframe></p>
<h1>HW 4</h1>
<h4>主題: 利用 Python 控制機電模擬系統 (20%)</h4>
<p style="padding-left: 30px;">利用 <a href="https://solvespace.com/">https://solvespace.com/</a> 建立機械系統零組件</p>
<p style="padding-left: 30px;">利用 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 建立機電模擬系統</p>
<p style="padding-left: 30px;">利用 <a href="https://manual.coppeliarobotics.com/en/zmqRemoteApiOverview.htm">Python</a> 跨網路控制瀏覽器上的機電模擬系統</p>
<p style="padding-left: 30px;">範例:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z">cd2023_pj3ag4_zmq_football_4.7.7z</a></p>
<p style="padding-left: 60px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</a></p>
<p>完成上述流程整理後, 請將 HW4 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 4 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 4 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h3>w16_exam3</h3>
<p></p>
<p><a href="https://mdecp2024.github.io/hw-41323118/content/Brython.html?src=https://gist.githubusercontent.com/41323118/0f6a4f92adaee2267eb92c6c53156016/raw/5f393b4199e8e585bbb18645167d68981eee8f24/w16_exam3.py">程式碼</a></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/vNgFq07yUPg?si=-9fNe4-fj2oDXJM9" title="YouTube video player" width="560"></iframe></p>
<h1>Final Report</h1>
<p>期末口頭與書面專題報告 (20%)</p>
<p>期末口頭專題報告影片:</p>
<p style="padding-left: 30px;">......</p>
<p>期末書面專題報告檔案 (pdf):</p>
<p style="padding-left: 30px;">......</p>
<p>電腦輔助設計與實習課程總結心得:</p>
<p style="padding-left: 30px;">......</p>
<p>期末報告自評成績:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 Final Report 自評分數輸入 cp2024 自評表單中.</p>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>
<h1>Brython</h1>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p></div></div>